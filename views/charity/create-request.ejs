<%- include('../partials/header') %>

<div class="row mb-4">
    <div class="col-md-12">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/charity/dashboard">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="/charity/requests">Donation Requests</a></li>
                <li class="breadcrumb-item active" aria-current="page">Create Request</li>
            </ol>
        </nav>
        <h1 class="mb-3">Create Donation Request</h1>
        <p class="text-muted">Create a new request for donations from the community.</p>
    </div>
</div>

<div class="row">
    <div class="col-lg-8 mx-auto">
        <div class="card border-0 shadow-sm">
            <div class="card-body p-4">
                <form action="/charity/requests" method="POST" enctype="multipart/form-data">
                    <!-- Item Selection -->
                    <div class="mb-4">
                        <h5 class="mb-3">Item Information</h5>
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label for="category" class="form-label">Category</label>
                                <select class="form-select" id="category" required>
                                    <option value="" selected disabled>Select a category</option>
                                    <% categories.forEach(function(category) { %>
                                        <option value="<%= category.id %>"><%= category.name %></option>
                                    <% }); %>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="item_id" class="form-label">Item</label>
                                <select class="form-select" id="item_id" name="item_id" required>
                                    <option value="" selected disabled>Select a category first</option>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="quantity" class="form-label">Quantity Needed</label>
                                <div class="input-group">
                                    <input type="number" class="form-control" id="quantity" name="quantity" min="1" required>
                                    <span class="input-group-text" id="unit-text">units</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Request Details -->
                    <div class="mb-4">
                        <h5 class="mb-3">Request Details</h5>
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label for="request_type" class="form-label">Request Type</label>
                                <select class="form-select" id="request_type" name="request_type" required>
                                    <option value="drop-off">Drop-off Only</option>
                                    <option value="pickup">Allow Pickup</option>
                                </select>
                                <div class="form-text">
                                    Choose whether donors can drop off items or request a pickup.
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label for="available_times" class="form-label">Available Until</label>
                                <input type="date" class="form-control" id="available_times" name="available_times" required min="<%= new Date().toISOString().split('T')[0] %>">
                                <div class="form-text">
                                    The date until which this request will remain active.
                                </div>
                            </div>
                            <div class="col-12">
                                <label for="drop_off_address" class="form-label">Drop-off Address</label>
                                <textarea class="form-control" id="drop_off_address" name="drop_off_address" rows="3" required><%= charity.address %></textarea>
                                <div class="form-text">
                                    This is where donors will drop off their donations. Your charity address is pre-filled, but you can change it if needed.
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Additional Information -->
                    <div class="mb-4">
                        <h5 class="mb-3">Additional Information</h5>
                        <div class="row g-3">
                            <div class="col-12">
                                <label for="notes" class="form-label">Notes (Optional)</label>
                                <textarea class="form-control" id="notes" name="notes" rows="3" placeholder="Add any additional information or specific requirements for this request"></textarea>
                            </div>
                            <div class="col-12">
                                <label for="image" class="form-label">Upload Image (Optional)</label>
                                <input type="file" class="form-control" id="image" name="image" accept="image/*">
                                <div class="form-text">
                                    Upload an image to help donors understand what you need. Max size: 5MB.
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-primary btn-lg">Create Request</button>
                        <a href="/charity/requests" class="btn btn-outline-secondary">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const categorySelect = document.getElementById('category');
        const itemSelect = document.getElementById('item_id');
        const unitText = document.getElementById('unit-text');
        
        // Store all items by category
        const itemsByCategory = {};
        
        <% categories.forEach(function(category) { %>
            itemsByCategory[<%= category.id %>] = [
                <% if (category.items && category.items.length > 0) { %>
                    <% category.items.forEach(function(item) { %>
                        {
                            id: <%= item.id %>,
                            name: '<%= item.name %>',
                            unit: '<%= item.unit %>'
                        },
                    <% }); %>
                <% } %>
            ];
        <% }); %>
        
        // Update items when category changes
        categorySelect.addEventListener('change', function() {
            const categoryId = this.value;
            const items = itemsByCategory[categoryId] || [];
            
            // Clear current options
            itemSelect.innerHTML = '';
            
            if (items.length === 0) {
                const option = document.createElement('option');
                option.value = '';
                option.textContent = 'No items in this category';
                option.disabled = true;
                option.selected = true;
                itemSelect.appendChild(option);
            } else {
                // Add default option
                const defaultOption = document.createElement('option');
                defaultOption.value = '';
                defaultOption.textContent = 'Select an item';
                defaultOption.disabled = true;
                defaultOption.selected = true;
                itemSelect.appendChild(defaultOption);
                
                // Add items
                items.forEach(item => {
                    const option = document.createElement('option');
                    option.value = item.id;
                    option.textContent = item.name;
                    option.dataset.unit = item.unit;
                    itemSelect.appendChild(option);
                });
            }
        });
        
        // Update unit text when item changes
        itemSelect.addEventListener('change', function() {
            const selectedOption = this.options[this.selectedIndex];
            if (selectedOption && selectedOption.dataset.unit) {
                unitText.textContent = selectedOption.dataset.unit + '(s)';
            } else {
                unitText.textContent = 'units';
            }
        });
        
        // Pre-select item if provided in URL
        const urlParams = new URLSearchParams(window.location.search);
        const itemParam = urlParams.get('item');
        
        if (itemParam) {
            // Find which category the item belongs to
            let foundCategory = null;
            
            for (const categoryId in itemsByCategory) {
                const items = itemsByCategory[categoryId];
                const foundItem = items.find(item => item.id == itemParam);
                
                if (foundItem) {
                    foundCategory = categoryId;
                    break;
                }
            }
            
            if (foundCategory) {
                // Set category
                categorySelect.value = foundCategory;
                
                // Trigger change event to populate items
                const event = new Event('change');
                categorySelect.dispatchEvent(event);
                
                // Set item
                setTimeout(() => {
                    itemSelect.value = itemParam;
                    
                    // Update unit text
                    const selectedOption = itemSelect.options[itemSelect.selectedIndex];
                    if (selectedOption && selectedOption.dataset.unit) {
                        unitText.textContent = selectedOption.dataset.unit + '(s)';
                    }
                }, 100);
            }
        }
    });
</script>

<%- include('../partials/footer') %>
